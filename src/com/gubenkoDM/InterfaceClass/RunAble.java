package com.gubenkoDM.InterfaceClass;

/**
 * Created by Nestor on 15.03.2017.
 */

/*
 Интерфейс это полностью абстрактный класс. У него жестко зашит внутри модификатор доступа abstract
 Все методы в интерфейсе абстрактные. У всех абстрактных методов по умолчанию модификатор доступа public.
 В документации пишут что все методы интерфейса должны быть абстрактными, но на деле можно добавлять в интерфейс обычные методы, тоесть методы с реализацие по умолчанию модификатор доступа default
 В интерфейса можно описывать также и статические методы интерфейса
 Нельзя создавать объект интерфейса
 Все поля интерфейса по умолчанию имеют модификаторы public static final
 У интерфейса не может быть конструктора в отличие от абстрактного класса
 Интерфейс не может быть финализирован, методы интерфейса не могу быть финализированными
 !!!Интерфейc может быть полностью пустым!!!
 Один интерефейс может наследовать другой интерфейс с помошью extends.
 */

public interface RunAble {
    int Count=1000; //модификаторы доступа ТОЛЬКО public static final
    void run(); //абстрактный метод. модификатор доступа ТОЛЬКО public.

    default void sleep(){ //обычный метод с реализацией по умолчанию. Имеет модификатор доступа ТОЛЬКО default
        System.out.println("Сплю!!");
    };

    static void jump(){ //статический метод интерфейса. модификатор доступа ТОЛЬКО public
        System.out.println("Прыг прыг!");
    }
}
